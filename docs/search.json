{"Structs/ResultsView.html#/s:13SortSpectacle11ResultsViewV6engineAA0A11CoordinatorCvp":{"name":"engine","abstract":"<p>The timing results for each of the algorithm executed.</p>","parent_name":"ResultsView"},"Structs/ResultsView.html#/s:7SwiftUI4ViewP4body4BodyQzvp":{"name":"body","parent_name":"ResultsView"},"Structs/Stack.html#/s:13SortSpectacle5StackV7storage33_84B343897BC1BFE99A6CDB9E61738B59LLSayxGvp":{"name":"storage","abstract":"<p>Uses an array to store the elements of the stack.</p>","parent_name":"Stack"},"Structs/Stack.html#/s:13SortSpectacle5StackV4peekxSgyF":{"name":"peek()","abstract":"<p>Peek to check if there are elements in the underlying data structure.</p>","parent_name":"Stack"},"Structs/Stack.html#/s:13SortSpectacle5StackV4pushyyxF":{"name":"push(_:)","abstract":"<p>Pushes an element into the data structure.</p>","parent_name":"Stack"},"Structs/Stack.html#/s:13SortSpectacle5StackV3popxSgyF":{"name":"pop()","abstract":"<p>Gets the topmost element from the storage.</p>","parent_name":"Stack"},"Structs/Stack.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"Stack"},"Structs/Stack.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"Stack"},"Structs/Stack.html#/s:s25ExpressibleByArrayLiteralP05arrayD0x0cD7ElementQzd_tcfc":{"name":"init(arrayLiteral:)","parent_name":"Stack"},"Structs/SwappedItems/Operation.html#/s:13SortSpectacle12SwappedItemsV9OperationO4swapyA2EmF":{"name":"swap","abstract":"<p>Swap the values of first and second indexes in the array.</p>","parent_name":"Operation"},"Structs/SwappedItems/Operation.html#/s:13SortSpectacle12SwappedItemsV9OperationO9moveValueyA2EmF":{"name":"moveValue","abstract":"<p>Move the <em>value</em> in the <em>first</em> to the place indicated by the <em>second</em> <em>index</em>.</p>","parent_name":"Operation"},"Structs/SwappedItems/Operation.html":{"name":"Operation","abstract":"<p>The swap operations</p>","parent_name":"SwappedItems"},"Structs/SwappedItems.html#/s:13SortSpectacle12SwappedItemsV9operationAC9OperationOvp":{"name":"operation","abstract":"<p>The operation to perform, default is swap.</p>","parent_name":"SwappedItems"},"Structs/SwappedItems.html#/s:13SortSpectacle12SwappedItemsV5firstSivp":{"name":"first","abstract":"<p>The index to swap or move values from. Value less than zero means that no move should be performed.</p>","parent_name":"SwappedItems"},"Structs/SwappedItems.html#/s:13SortSpectacle12SwappedItemsV6secondSivp":{"name":"second","abstract":"<p>The index to swap or move values to. Value less than zero means that no move should be performed.</p>","parent_name":"SwappedItems"},"Structs/SwappedItems.html#/s:13SortSpectacle12SwappedItemsV13currentIndex1Sivp":{"name":"currentIndex1","abstract":"<p>The first &ldquo;current&rdquo; index method is referring to. Shown in animation view.</p>","parent_name":"SwappedItems"},"Structs/SwappedItems.html#/s:13SortSpectacle12SwappedItemsV13currentIndex2Sivp":{"name":"currentIndex2","abstract":"<p>The second &ldquo;current&rdquo; index method is referring to. Shown in animation view.</p>","parent_name":"SwappedItems"},"Structs/TimingResult.html#/s:13SortSpectacle12TimingResultV10methodNameSSvp":{"name":"methodName","abstract":"<p>The name of the sorting algorithm.</p>","parent_name":"TimingResult"},"Structs/TimingResult.html#/s:13SortSpectacle12TimingResultV6timingSdvp":{"name":"timing","abstract":"<p>The amount of seconds the algorithm took to sort the array.</p>","parent_name":"TimingResult"},"Structs/TimingResult.html#/s:13SortSpectacle12TimingResultV14timingAsStringSSvp":{"name":"timingAsString","abstract":"<p>Timing as string</p>","parent_name":"TimingResult"},"Structs/TimingResult.html#/s:SL1loiySbx_xtFZ":{"name":"<(_:_:)","parent_name":"TimingResult"},"Structs/ShellSort/State.html#/s:13SortSpectacle05ShellA0V5State33_F4919692261DC41368CCBB2C5D3A04B6LLO17inLevel2LoopStartyA2FmF":{"name":"inLevel2LoopStart","abstract":"<p>Sorting is executing the beginning part of second inner loop.</p>","parent_name":"State"},"Structs/ShellSort/State.html#/s:13SortSpectacle05ShellA0V5State33_F4919692261DC41368CCBB2C5D3A04B6LLO12inLevel3LoopyA2FmF":{"name":"inLevel3Loop","abstract":"<p>Sorting is executing the level 3 loop.</p>","parent_name":"State"},"Structs/ShellSort/State.html#/s:13SortSpectacle05ShellA0V5State33_F4919692261DC41368CCBB2C5D3A04B6LLO15inLevel2LoopEndyA2FmF":{"name":"inLevel2LoopEnd","abstract":"<p>Sorting is executing second inner loop after the level 3 loop.</p>","parent_name":"State"},"Structs/ShellSort/State.html#/s:13SortSpectacle05ShellA0V5State33_F4919692261DC41368CCBB2C5D3A04B6LLO9gapUpdateyA2FmF":{"name":"gapUpdate","abstract":"<p>Sorting is updating the gap variable (first level loop).</p>","parent_name":"State"},"Structs/ShellSort.html#/s:13SortSpectacle05ShellA0V4sizeSivp":{"name":"size","abstract":"<p>The size of the array to sort.</p>","parent_name":"ShellSort"},"Structs/ShellSort.html#/s:13SortSpectacle05ShellA0V4nameSSvp":{"name":"name","abstract":"<p>The name of the sort method.</p>","parent_name":"ShellSort"},"Structs/ShellSort.html#/s:13SortSpectacle05ShellA0V11descriptionSSvp":{"name":"description","abstract":"<p>The description of the Shellsort method.</p>","parent_name":"ShellSort"},"Structs/ShellSort.html#/s:13SortSpectacle0A6MethodP8webLinksSaySS_SStGvp":{"name":"webLinks","parent_name":"ShellSort"},"Structs/ShellSort.html#/s:13SortSpectacle05ShellA0V10innerIndex33_F4919692261DC41368CCBB2C5D3A04B6LLSivp":{"name":"innerIndex","abstract":"<p>Inner loop index counter.</p>","parent_name":"ShellSort"},"Structs/ShellSort.html#/s:13SortSpectacle05ShellA0V3gap33_F4919692261DC41368CCBB2C5D3A04B6LLSivp":{"name":"gap","abstract":"<p>The gap, divides the sorted array to sublist(s) to be sorted one at a time.</p>","parent_name":"ShellSort"},"Structs/ShellSort.html#/s:13SortSpectacle05ShellA0V12movableValue33_F4919692261DC41368CCBB2C5D3A04B6LLSivp":{"name":"movableValue","abstract":"<p>The value to move in the array.</p>","parent_name":"ShellSort"},"Structs/ShellSort/State.html":{"name":"State","abstract":"<p>State handling for ShellSort step by step sorting.</p>","parent_name":"ShellSort"},"Structs/ShellSort.html#/s:13SortSpectacle05ShellA0V5state33_F4919692261DC41368CCBB2C5D3A04B6LLAC5StateAELLOvp":{"name":"state","abstract":"<p>The state variable holding the current state of the sorting.</p>","parent_name":"ShellSort"},"Structs/ShellSort.html#/s:13SortSpectacle05ShellA0V9arraySizeACSi_tcfc":{"name":"init(arraySize:)","abstract":"<p>Initializes the sorter to handle arrays of specific size.</p>","parent_name":"ShellSort"},"Structs/ShellSort.html#/s:13SortSpectacle05ShellA0V7restartyyF":{"name":"restart()","abstract":"<p>Restarts the sorter to start from beginning.</p>","parent_name":"ShellSort"},"Structs/ShellSort.html#/s:13SortSpectacle05ShellA0V8nextStep5array12swappedItemsSbSaySiG_AA07SwappedH0VztF":{"name":"nextStep(array:swappedItems:)","abstract":"<p>Performs a step in the sorting of the array. Caller will do the actual swapping of values in the array.","parent_name":"ShellSort"},"Structs/ShellSort.html#/s:13SortSpectacle05ShellA0V13realAlgorithm5arrayySaySiGz_tF":{"name":"realAlgorithm(array:)","abstract":"<p>The tight loop implementation of Shell sort, sorting the array at one go.</p>","parent_name":"ShellSort"},"Structs/RadixSort.html#/s:13SortSpectacle05RadixA0V5State33_231DC138CD339F48C493ADE2FE606F93LLO":{"name":"State","abstract":"<p>The states of the algorithm. Basically, as with other methods, the realAlgorigthm was sliced","parent_name":"RadixSort"},"Structs/RadixSort.html#/s:13SortSpectacle0A6MethodP9arraySizexSi_tcfc":{"name":"init(arraySize:)","parent_name":"RadixSort"},"Structs/RadixSort.html#/s:13SortSpectacle0A6MethodP4sizeSivp":{"name":"size","parent_name":"RadixSort"},"Structs/RadixSort.html#/s:13SortSpectacle0A6MethodP4nameSSvp":{"name":"name","parent_name":"RadixSort"},"Structs/RadixSort.html#/s:13SortSpectacle0A6MethodP11descriptionSSvp":{"name":"description","parent_name":"RadixSort"},"Structs/RadixSort.html#/s:13SortSpectacle0A6MethodP8webLinksSaySS_SStGvp":{"name":"webLinks","parent_name":"RadixSort"},"Structs/RadixSort.html#/s:13SortSpectacle0A6MethodP7restartyyF":{"name":"restart()","parent_name":"RadixSort"},"Structs/RadixSort.html#/s:13SortSpectacle0A6MethodP8nextStep5array12swappedItemsSbSaySiG_AA07SwappedH0VztF":{"name":"nextStep(array:swappedItems:)","parent_name":"RadixSort"},"Structs/RadixSort.html#/s:13SortSpectacle05RadixA0V13realAlgorithm5arrayySaySiGz_tF":{"name":"realAlgorithm(array:)","abstract":"<p>Sorts a copy of the array in the paramenter using the sorting method in one go.","parent_name":"RadixSort"},"Structs/NativeSwiftSort.html#/s:13SortSpectacle0A6MethodP9arraySizexSi_tcfc":{"name":"init(arraySize:)","parent_name":"NativeSwiftSort"},"Structs/NativeSwiftSort.html#/s:13SortSpectacle0A6MethodP4sizeSivp":{"name":"size","parent_name":"NativeSwiftSort"},"Structs/NativeSwiftSort.html#/s:13SortSpectacle0A6MethodP4nameSSvp":{"name":"name","parent_name":"NativeSwiftSort"},"Structs/NativeSwiftSort.html#/s:13SortSpectacle0A6MethodP11descriptionSSvp":{"name":"description","parent_name":"NativeSwiftSort"},"Structs/NativeSwiftSort.html#/s:13SortSpectacle0A6MethodP8webLinksSaySS_SStGvp":{"name":"webLinks","parent_name":"NativeSwiftSort"},"Structs/NativeSwiftSort.html#/s:13SortSpectacle011NativeSwiftA0V7restartyyF":{"name":"restart()","abstract":"<p>Step by step execution not implemented.</p>","parent_name":"NativeSwiftSort"},"Structs/NativeSwiftSort.html#/s:13SortSpectacle011NativeSwiftA0V8nextStep5array12swappedItemsSbSaySiG_AA07SwappedI0VztF":{"name":"nextStep(array:swappedItems:)","abstract":"<p>Step by step execution not implemented.</p>","parent_name":"NativeSwiftSort"},"Structs/NativeSwiftSort.html#/s:13SortSpectacle011NativeSwiftA0V13realAlgorithm5arrayySaySiGz_tF":{"name":"realAlgorithm(array:)","abstract":"<p>Just call the usual sort implementation of the library array struct.</p>","parent_name":"NativeSwiftSort"},"Structs/MergeSort.html#/s:13SortSpectacle05MergeA0V9arraySizeACSi_tcfc":{"name":"init(arraySize:)","abstract":"<p>Initializes the Heapsort with the size of the array to sort.</p>","parent_name":"MergeSort"},"Structs/MergeSort.html#/s:13SortSpectacle05MergeA0V4sizeSivp":{"name":"size","abstract":"<p>The array size.</p>","parent_name":"MergeSort"},"Structs/MergeSort.html#/s:13SortSpectacle05MergeA0V4nameSSvp":{"name":"name","abstract":"<p>Name of the sorting method.</p>","parent_name":"MergeSort"},"Structs/MergeSort.html#/s:13SortSpectacle05MergeA0V11descriptionSSvp":{"name":"description","abstract":"<p>Description of the sorting method.</p>","parent_name":"MergeSort"},"Structs/MergeSort.html#/s:13SortSpectacle05MergeA0V8webLinksSaySS_SStGvp":{"name":"webLinks","abstract":"<p>Weblinks to read more information.</p>","parent_name":"MergeSort"},"Structs/MergeSort.html#/s:13SortSpectacle05MergeA0V7restartyyF":{"name":"restart()","abstract":"<p>Restarts the sorting method by giving intial values to member variables.</p>","parent_name":"MergeSort"},"Structs/MergeSort.html#/s:13SortSpectacle05MergeA0V8nextStep5array12swappedItemsSbSaySiG_AA07SwappedH0VztF":{"name":"nextStep(array:swappedItems:)","abstract":"<p>Executes a step of the sorting.</p>","parent_name":"MergeSort"},"Structs/MergeSort.html#/s:13SortSpectacle05MergeA0V4PullV":{"name":"Pull","abstract":"<p>Helper data type","parent_name":"MergeSort"},"Structs/MergeSort.html#/s:13SortSpectacle05MergeA0V8IteratorV":{"name":"Iterator","abstract":"<p>Helper data type","parent_name":"MergeSort"},"Structs/MergeSort.html#/s:13SortSpectacle05MergeA0V13realAlgorithm5arrayySaySiGz_tF":{"name":"realAlgorithm(array:)","abstract":"<p>The real algorithm without step-by-step execution.</p>","parent_name":"MergeSort"},"Structs/LampSort/State.html#/s:13SortSpectacle04LampA0V5State33_2FCA08766527A1C929FF07B913DD636BLLO18outerLoopFirstPartyA2FmF":{"name":"outerLoopFirstPart","abstract":"<p>The outer loop&rsquo; first steps to execute.</p>","parent_name":"State"},"Structs/LampSort/State.html#/s:13SortSpectacle04LampA0V5State33_2FCA08766527A1C929FF07B913DD636BLLO12innerForLoopyA2FmF":{"name":"innerForLoop","abstract":"<p>The inner loop area to execute.</p>","parent_name":"State"},"Structs/LampSort/State.html#/s:13SortSpectacle04LampA0V5State33_2FCA08766527A1C929FF07B913DD636BLLO8finishedyA2FmF":{"name":"finished","abstract":"<p>Algorithm is done sorting.</p>","parent_name":"State"},"Structs/LampSort.html#/s:13SortSpectacle0A6MethodP4sizeSivp":{"name":"size","parent_name":"LampSort"},"Structs/LampSort.html#/s:13SortSpectacle04LampA0V4lows33_2FCA08766527A1C929FF07B913DD636BLLAA5StackVySiGvp":{"name":"lows","abstract":"<p>Holds the indexes to the lower indexes of areas to sort.</p>","parent_name":"LampSort"},"Structs/LampSort.html#/s:13SortSpectacle04LampA0V5highs33_2FCA08766527A1C929FF07B913DD636BLLAA5StackVySiGvp":{"name":"highs","abstract":"<p>Holds the indexes to the higher indes values to sort.</p>","parent_name":"LampSort"},"Structs/LampSort/State.html":{"name":"State","abstract":"<p>The state variable used in step by step sorting.</p>","parent_name":"LampSort"},"Structs/LampSort.html#/s:13SortSpectacle04LampA0V4nameSSvp":{"name":"name","abstract":"<p>The name of the sort method.</p>","parent_name":"LampSort"},"Structs/LampSort.html#/s:13SortSpectacle04LampA0V11descriptionSSvp":{"name":"description","abstract":"<p>Short description for the sort method.</p>","parent_name":"LampSort"},"Structs/LampSort.html#/s:13SortSpectacle0A6MethodP8webLinksSaySS_SStGvp":{"name":"webLinks","parent_name":"LampSort"},"Structs/LampSort.html#/s:13SortSpectacle04LampA0V9arraySizeACSi_tcfc":{"name":"init(arraySize:)","abstract":"<p>Initializes the sorting method.</p>","parent_name":"LampSort"},"Structs/LampSort.html#/s:13SortSpectacle04LampA0V7restartyyF":{"name":"restart()","abstract":"<p>Restarts the method by resetting all members to initial state.</p>","parent_name":"LampSort"},"Structs/LampSort.html#/s:13SortSpectacle04LampA0V8nextStep5array12swappedItemsSbSaySiG_AA07SwappedH0VztF":{"name":"nextStep(array:swappedItems:)","abstract":"<p>Peforms a step in Lampsort. Caller will do the actual moving/swapping of values in the array.</p>","parent_name":"LampSort"},"Structs/LampSort.html#/s:13SortSpectacle04LampA0V13realAlgorithm5arrayySaySiGz_tF":{"name":"realAlgorithm(array:)","abstract":"<p>Executes the &ldquo;real&rdquo; Lampsort algoritm in one go using loops.</p>","parent_name":"LampSort"},"Structs/HeapSort/State.html#/s:13SortSpectacle04HeapA0V5State33_96BBAC9A2BB81DA5889FF7E8F7B52E36LLO10heapifyingyA2FmF":{"name":"heapifying","abstract":"<p>Is doing the heapifying before sifting down.</p>","parent_name":"State"},"Structs/HeapSort/State.html#/s:13SortSpectacle04HeapA0V5State33_96BBAC9A2BB81DA5889FF7E8F7B52E36LLO13mainWhileLoopyA2FmF":{"name":"mainWhileLoop","abstract":"<p>Is in the main while loop after heapify.</p>","parent_name":"State"},"Structs/HeapSort/State.html#/s:13SortSpectacle04HeapA0V5State33_96BBAC9A2BB81DA5889FF7E8F7B52E36LLO11siftingDownyA2FmF":{"name":"siftingDown","abstract":"<p>Is sifting down, either from heapify or from main while loop.</p>","parent_name":"State"},"Structs/HeapSort/State.html#/s:13SortSpectacle04HeapA0V5State33_96BBAC9A2BB81DA5889FF7E8F7B52E36LLO8finishedyA2FmF":{"name":"finished","abstract":"<p>Work is done.</p>","parent_name":"State"},"Structs/HeapSort.html#/s:13SortSpectacle04HeapA0V9arraySizeACSi_tcfc":{"name":"init(arraySize:)","abstract":"<p>Initializes the Heapsort with the size of the array to sort.</p>","parent_name":"HeapSort"},"Structs/HeapSort.html#/s:13SortSpectacle04HeapA0V4sizeSivp":{"name":"size","abstract":"<p>The array size.</p>","parent_name":"HeapSort"},"Structs/HeapSort.html#/s:13SortSpectacle04HeapA0V4nameSSvp":{"name":"name","abstract":"<p>Name of the sorting method.</p>","parent_name":"HeapSort"},"Structs/HeapSort.html#/s:13SortSpectacle04HeapA0V11descriptionSSvp":{"name":"description","abstract":"<p>Description of the sorting method.</p>","parent_name":"HeapSort"},"Structs/HeapSort.html#/s:13SortSpectacle04HeapA0V8webLinksSaySS_SStGvp":{"name":"webLinks","abstract":"<p>Weblinks to read more information.</p>","parent_name":"HeapSort"},"Structs/HeapSort.html#/s:13SortSpectacle04HeapA0V7restartyyF":{"name":"restart()","abstract":"<p>Restarts the sorting method by giving intial values to member variables.</p>","parent_name":"HeapSort"},"Structs/HeapSort.html#/s:13SortSpectacle04HeapA0V8nextStep5array12swappedItemsSbSaySiG_AA07SwappedH0VztF":{"name":"nextStep(array:swappedItems:)","abstract":"<p>Executes a step of the sorting.</p>","parent_name":"HeapSort"},"Structs/HeapSort/State.html":{"name":"State","abstract":"<p>States of the step-by-step algorithm.</p>","parent_name":"HeapSort"},"Structs/HeapSort.html#/s:13SortSpectacle04HeapA0V5state33_96BBAC9A2BB81DA5889FF7E8F7B52E36LLAC5StateAELLOvp":{"name":"state","abstract":"<p>The state of the step-by-step algorithm.</p>","parent_name":"HeapSort"},"Structs/HeapSort.html#/s:13SortSpectacle04HeapA0V18stateBeforeSifting33_96BBAC9A2BB81DA5889FF7E8F7B52E36LLAC5StateAELLOvp":{"name":"stateBeforeSifting","abstract":"<p>To which state to return after sifting down.</p>","parent_name":"HeapSort"},"Structs/HeapSort.html#/s:13SortSpectacle04HeapA0V13realAlgorithm5arrayySaySiGz_tF":{"name":"realAlgorithm(array:)","abstract":"<p>The real algorithm without step-by-step execution.</p>","parent_name":"HeapSort"},"Structs/HeapSort.html#/s:13SortSpectacle04HeapA0V7heapify33_96BBAC9A2BB81DA5889FF7E8F7B52E36LLyySaySiGz_SitF":{"name":"heapify(_:_:)","abstract":"<p>Heapify</p>","parent_name":"HeapSort"},"Structs/HeapSort.html#/s:13SortSpectacle04HeapA0V8siftDown33_96BBAC9A2BB81DA5889FF7E8F7B52E36LL_5start3endySaySiGz_S2itF":{"name":"siftDown(_:start:end:)","abstract":"<p>Sifts the values to their correct places in the heap.</p>","parent_name":"HeapSort"},"Structs/HeapSort.html#/s:13SortSpectacle04HeapA0V6parent33_96BBAC9A2BB81DA5889FF7E8F7B52E36LLyS2iF":{"name":"parent(_:)","abstract":"<p>Heap utility method to get the parent node of an index.</p>","parent_name":"HeapSort"},"Structs/HeapSort.html#/s:13SortSpectacle04HeapA0V9leftChild33_96BBAC9A2BB81DA5889FF7E8F7B52E36LLyS2iF":{"name":"leftChild(_:)","abstract":"<p>Heap utility method to get the left child node of an index.</p>","parent_name":"HeapSort"},"Structs/HeapSort.html#/s:13SortSpectacle04HeapA0V10rightChild33_96BBAC9A2BB81DA5889FF7E8F7B52E36LLyS2iF":{"name":"rightChild(_:)","abstract":"<p>Heap utility method to get the right child node of an index.</p>","parent_name":"HeapSort"},"Structs/BubbleSort.html#/s:13SortSpectacle06BubbleA0V4nameSSvp":{"name":"name","abstract":"<p>Name of the BubbleSort is &ldquo;BubbleSort&rdquo;.</p>","parent_name":"BubbleSort"},"Structs/BubbleSort.html#/s:13SortSpectacle06BubbleA0V11descriptionSSvp":{"name":"description","abstract":"<p>A short description of the Bubblesort.</p>","parent_name":"BubbleSort"},"Structs/BubbleSort.html#/s:13SortSpectacle0A6MethodP8webLinksSaySS_SStGvp":{"name":"webLinks","parent_name":"BubbleSort"},"Structs/BubbleSort.html#/s:13SortSpectacle06BubbleA0V4sizeSivp":{"name":"size","abstract":"<p>Implements the size property declared in the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SortMethod.html\">SortMethod</a></code> protocol. This is the size of the array to sort.</p>","parent_name":"BubbleSort"},"Structs/BubbleSort.html#/s:13SortSpectacle06BubbleA0V8sortSize33_03AA02091AC01CE17519CBA0AFE21EF9LLSivp":{"name":"sortSize","abstract":"<p>A varible to address the sortable (not yet sorted) size of the array.</p>","parent_name":"BubbleSort"},"Structs/BubbleSort.html#/s:13SortSpectacle06BubbleA0V7newSize33_03AA02091AC01CE17519CBA0AFE21EF9LLSivp":{"name":"newSize","abstract":"<p>A variable to keep track where sorting has advanced to.</p>","parent_name":"BubbleSort"},"Structs/BubbleSort.html#/s:13SortSpectacle06BubbleA0V10innerIndex33_03AA02091AC01CE17519CBA0AFE21EF9LLSivp":{"name":"innerIndex","abstract":"<p>Loop index variable for sorting the array.</p>","parent_name":"BubbleSort"},"Structs/BubbleSort.html#/s:13SortSpectacle06BubbleA0V9arraySizeACSi_tcfc":{"name":"init(arraySize:)","abstract":"<p>Initializes the BubbleSort.</p>","parent_name":"BubbleSort"},"Structs/BubbleSort.html#/s:13SortSpectacle06BubbleA0V7restartyyF":{"name":"restart()","abstract":"<p>Restarts the bubble sort, resets the member variables.</p>","parent_name":"BubbleSort"},"Structs/BubbleSort.html#/s:13SortSpectacle06BubbleA0V8nextStep5array12swappedItemsSbSaySiG_AA07SwappedH0VztF":{"name":"nextStep(array:swappedItems:)","abstract":"<p>Implements the SortMethod protocol with bubble sort method.","parent_name":"BubbleSort"},"Structs/BubbleSort.html#/s:13SortSpectacle06BubbleA0V13realAlgorithm5arrayySaySiGz_tF":{"name":"realAlgorithm(array:)","abstract":"<p>Implementation of the BubbleSort in two tight loops.</p>","parent_name":"BubbleSort"},"Structs/ContentView.html#/s:7SwiftUI4ViewP4body4BodyQzvp":{"name":"body","parent_name":"ContentView"},"Structs/NumbersLineShape.html#/s:13SortSpectacle16NumbersLineShapeV11sourceArray10activeInd10H4Ind2ACSaySiGSg_S2itcfc":{"name":"init(sourceArray:activeInd1:activeInd2:)","abstract":"<p>Initializes the shape by providing the array which contains the numbers to be drawn.</p>","parent_name":"NumbersLineShape"},"Structs/NumbersLineShape.html#/s:13SortSpectacle16NumbersLineShapeV4path2in7SwiftUI4PathVSo6CGRectV_tF":{"name":"path(in:)","abstract":"<p>Creates the <code>Path</code> shape from the numbers in the array</p>","parent_name":"NumbersLineShape"},"Structs/NumbersLineShape.html":{"name":"NumbersLineShape","abstract":"<p>A shape which draws the numbers in an array of integers as lines.</p>"},"Structs/ContentView.html":{"name":"ContentView","abstract":"<p>The main view of the app.</p>"},"Structs/BubbleSort.html":{"name":"BubbleSort","abstract":"<p>Implementation of the Bubble sort algorithm.</p>"},"Structs/HeapSort.html":{"name":"HeapSort","abstract":"<p>Heapsort is an improved selection sort: like selection sort, heapsort divides its input into a sorted and an unsorted region, and it iteratively shrinks the unsorted region by extracting the largest element from it and inserting it into the sorted region.</p>"},"Structs/LampSort.html":{"name":"LampSort","abstract":"<p>LampSort implements the non-recursive version of QuickSort.</p>"},"Structs/MergeSort.html":{"name":"MergeSort","abstract":"<p>Block sort, or block merge sort, is a sorting algorithm combining at least two merge operations with an insertion sort to arrive at O(n log n) in-place stable sorting. It gets its name from the observation that merging two sorted lists, A and B, is equivalent to breaking A into evenly sized blocks, inserting each A block into B under special rules, and merging AB pairs.</p>"},"Structs/NativeSwiftSort.html":{"name":"NativeSwiftSort","abstract":"<p>Native Swift sort in Foundation library is Tim sort.</p>"},"Structs/RadixSort.html":{"name":"RadixSort","abstract":"<p>Radix sort is a non-comparative sorting algorithm. It avoids comparison by creating and distributing elements into buckets according to their radix.</p>"},"Structs/ShellSort.html":{"name":"ShellSort","abstract":"<p>Implements the Shell sort algorithm. Shell sort is an in-place comparison sort. </p>"},"Structs/TimingResult.html":{"name":"TimingResult","abstract":"<p>Records the timing of sort methods executed in a tight loop. The results are shown"},"Structs/SwappedItems.html":{"name":"SwappedItems","abstract":"<p>Structure defining the operation when sorting an Int array."},"Structs/Stack.html":{"name":"Stack","abstract":"<p>A Stack data structure, implementing Stackable protocol.</p>"},"Structs/ResultsView.html":{"name":"ResultsView","abstract":"<p>The view displaying the results from executing the &ldquo;real&rdquo; sorting algorithms without the delays"},"Protocols/Stackable.html#/s:13SortSpectacle9StackableP7ElementQa":{"name":"Element","abstract":"<p>Type of elements to put into a stack.</p>","parent_name":"Stackable"},"Protocols/Stackable.html#/s:13SortSpectacle9StackableP4peek7ElementQzSgyF":{"name":"peek()","abstract":"<p>To peek if stack has an element to pop.</p>","parent_name":"Stackable"},"Protocols/Stackable.html#/s:13SortSpectacle9StackableP4pushyy7ElementQzF":{"name":"push(_:)","abstract":"<p>Push new element on top of the stack.</p>","parent_name":"Stackable"},"Protocols/Stackable.html#/s:13SortSpectacle9StackableP3pop7ElementQzSgyF":{"name":"pop()","abstract":"<p>Pop an element from the top of the stack.</p>","parent_name":"Stackable"},"Protocols/SortMethod.html#/s:13SortSpectacle0A6MethodP9arraySizexSi_tcfc":{"name":"init(arraySize:)","abstract":"<p>Initializes the sortmethod to sort an array with specific number of elements.</p>","parent_name":"SortMethod"},"Protocols/SortMethod.html#/s:13SortSpectacle0A6MethodP4sizeSivp":{"name":"size","abstract":"<p>The size of the array to sort.</p>","parent_name":"SortMethod"},"Protocols/SortMethod.html#/s:13SortSpectacle0A6MethodP4nameSSvp":{"name":"name","abstract":"<p>The name of the sorting method. Should return a short descriptive name, like &ldquo;BubbleSort&rdquo;.</p>","parent_name":"SortMethod"},"Protocols/SortMethod.html#/s:13SortSpectacle0A6MethodP11descriptionSSvp":{"name":"description","abstract":"<p>A 2-3 sentence description of the sorting method.</p>","parent_name":"SortMethod"},"Protocols/SortMethod.html#/s:13SortSpectacle0A6MethodP8webLinksSaySS_SStGvp":{"name":"webLinks","abstract":"<p>A collection of a description and a link to a website with more information about the sort method.</p>","parent_name":"SortMethod"},"Protocols/SortMethod.html#/s:13SortSpectacle0A6MethodP7restartyyF":{"name":"restart()","abstract":"<p>Restarts the sorting by resetting all loop counters, etc.</p>","parent_name":"SortMethod"},"Protocols/SortMethod.html#/s:13SortSpectacle0A6MethodP8nextStep5array12swappedItemsSbSaySiG_AA07SwappedH0VztF":{"name":"nextStep(array:swappedItems:)","abstract":"<p>Does the next step in the sort, moving or switching two values in the array.","parent_name":"SortMethod"},"Protocols/SortMethod.html#/s:13SortSpectacle0A6MethodP13realAlgorithm5arrayySaySiGz_tF":{"name":"realAlgorithm(array:)","abstract":"<p>Implementation of the sorting method without any steps, sorting the data in one go in a loop/loops.","parent_name":"SortMethod"},"Protocols/SortMethod.html":{"name":"SortMethod","abstract":"<p>A common protocol for all sorting methods.</p>"},"Protocols/Stackable.html":{"name":"Stackable","abstract":"<p>An interface for stack data structure needed by e.g. LampSort.</p>"},"Extensions/Array.html#/s:Sa13SortSpectacleSiRszlE7prepare5range5countySNySiG_SitF":{"name":"prepare(range:count:)","abstract":"<p>Prepare an array with a count of random numbers from a specified range.</p>","parent_name":"Array"},"Extensions/Array.html#/s:Sa13SortSpectacleSiRszlE7prepare5rangeySNySiG_tF":{"name":"prepare(range:)","abstract":"<p>Prepare an array from a specified range sequentially.</p>","parent_name":"Array"},"Extensions/Array.html#/s:Sa13SortSpectacleSiRszlE7prepare5countySi_tF":{"name":"prepare(count:)","abstract":"<p>Prepare an array of numbers from 1 to <code>count</code> sequentially.</p>","parent_name":"Array"},"Extensions/Array.html#/s:Sa13SortSpectacleSiRszlE06handleA9Operation9operationyAA12SwappedItemsV_tF":{"name":"handleSortOperation(operation:)","abstract":"<p>Does the sort operation to the array, depending on the operation parameter.","parent_name":"Array"},"Extensions/Array.html#/s:Sa13SortSpectacleSiRszlE8isSortedSbyF":{"name":"isSorted()","abstract":"<p>Utility function to test if an array is sorted.</p>","parent_name":"Array"},"Extensions/Array.html#/s:Sa13SortSpectacleSiRszlE20containsSameElements2asSbSaySiG_tF":{"name":"containsSameElements(as:)","abstract":"<p>Utility function used in testing to check if arrays contain the same elements","parent_name":"Array"},"Extensions/Array.html":{"name":"Array","abstract":"<p>Declare an extension to Int array to be able to easily prepare an array either</p>"},"Global%20Variables.html#/s:13SortSpectacle5debugSbvp":{"name":"debug","abstract":"<p>Set debug to true to print debug output where implemented"},"Classes/SortCoordinator/State.html#/s:13SortSpectacle0A11CoordinatorC5StateO7atStartyA2EmF":{"name":"atStart","abstract":"<p>Starting phase, where preparation for the execution is done</p>","parent_name":"State"},"Classes/SortCoordinator/State.html#/s:13SortSpectacle0A11CoordinatorC5StateO9animatingyA2EmF":{"name":"animating","abstract":"<p>The animating phase, where sorting methods are executed one by one, step by step, by calling the nextStep() method.</p>","parent_name":"State"},"Classes/SortCoordinator/State.html#/s:13SortSpectacle0A11CoordinatorC5StateO9measuringyA2EmF":{"name":"measuring","abstract":"<p>After animation, all sorting methods are executed using the realAlgorithm() method to time the &ldquo;actual&rdquo; perfomance of the methods.</p>","parent_name":"State"},"Classes/SortCoordinator/State.html#/s:13SortSpectacle0A11CoordinatorC5StateO5atEndyA2EmF":{"name":"atEnd","abstract":"<p>End phase, where the exection is finished.</p>","parent_name":"State"},"Classes/SortCoordinator.html#/s:13SortSpectacle0A11CoordinatorC13originalArraySaySiGSgvp":{"name":"originalArray","abstract":"<p>The data to be sorted is generated to <code>originalArray</code> first, then copied to","parent_name":"SortCoordinator"},"Classes/SortCoordinator.html#/s:13SortSpectacle0A11CoordinatorC5arraySaySiGSgvp":{"name":"array","abstract":"<p>The array that is actually used in the sorting. This is also displayed in the UI, the reason why it is @Published.</p>","parent_name":"SortCoordinator"},"Classes/SortCoordinator.html#/s:13SortSpectacle0A11CoordinatorC11descriptionSSvp":{"name":"description","abstract":"<p>The (current) sorting methods used. Value changes when execution moves from one method to another.</p>","parent_name":"SortCoordinator"},"Classes/SortCoordinator.html#/s:13SortSpectacle0A11CoordinatorC16performanceTableSayAA12TimingResultVGvp":{"name":"performanceTable","abstract":"<p>This table will include the real time performance metrics of the sorting methods after the measuring phase.</p>","parent_name":"SortCoordinator"},"Classes/SortCoordinator.html#/s:13SortSpectacle0A11CoordinatorC13currentMethod33_E39DA657DF99F8E3B5FB3314F3E5F9BALLAA0aE0_pSgvp":{"name":"currentMethod","abstract":"<p>The currently executing sorthing method reference.</p>","parent_name":"SortCoordinator"},"Classes/SortCoordinator.html#/s:13SortSpectacle0A11CoordinatorC5timer33_E39DA657DF99F8E3B5FB3314F3E5F9BALLSo7NSTimerCSgvp":{"name":"timer","abstract":"<p>A timer is used to control the execution of the sorting.</p>","parent_name":"SortCoordinator"},"Classes/SortCoordinator.html#/s:13SortSpectacle0A11CoordinatorC13timerInterval33_E39DA657DF99F8E3B5FB3314F3E5F9BALLSdvp":{"name":"timerInterval","abstract":"<p>Holds the current interval used in the timing.</p>","parent_name":"SortCoordinator"},"Classes/SortCoordinator.html#/s:13SortSpectacle0A11CoordinatorC9executing33_E39DA657DF99F8E3B5FB3314F3E5F9BALLSbvp":{"name":"executing","abstract":"<p>Is true, if sorting is ongoing, otherwise false.</p>","parent_name":"SortCoordinator"},"Classes/SortCoordinator.html#/s:13SortSpectacle0A11CoordinatorC18currentMethodIndex33_E39DA657DF99F8E3B5FB3314F3E5F9BALLSivp":{"name":"currentMethodIndex","abstract":"<p>Which of the sorting methods in the sortingMethod array is currently executed.</p>","parent_name":"SortCoordinator"},"Classes/SortCoordinator.html#/s:13SortSpectacle0A11CoordinatorC14sortingMethods33_E39DA657DF99F8E3B5FB3314F3E5F9BALLSayAA0A6Method_pGvp":{"name":"sortingMethods","abstract":"<p>All the supported sorting methods are placed in the array before starting the execution.</p>","parent_name":"SortCoordinator"},"Classes/SortCoordinator/State.html":{"name":"State","abstract":"<p>The different states of the execution of the sort coordinator.</p>","parent_name":"SortCoordinator"},"Classes/SortCoordinator.html#/s:13SortSpectacle0A11CoordinatorC5stateAC5StateOvp":{"name":"state","abstract":"<p>The state variable, holding the execution state.</p>","parent_name":"SortCoordinator"},"Classes/SortCoordinator.html#/s:13SortSpectacle0A11CoordinatorC26getCountOfSupportedMethodsSiyF":{"name":"getCountOfSupportedMethods()","abstract":"<p>Gets the count of supported sorting methods</p>","parent_name":"SortCoordinator"},"Classes/SortCoordinator.html#/s:13SortSpectacle0A11CoordinatorC7getNameSSyF":{"name":"getName()","abstract":"<p>Gets the name of the currently executing sorting method.</p>","parent_name":"SortCoordinator"},"Classes/SortCoordinator.html#/s:13SortSpectacle0A11CoordinatorC7prepare5countySi_tF":{"name":"prepare(count:)","abstract":"<p>Prepares the coordinator for sorting.</p>","parent_name":"SortCoordinator"},"Classes/SortCoordinator.html#/s:13SortSpectacle0A11CoordinatorC14getDescription3forS2S_tF":{"name":"getDescription(for:)","abstract":"<p>Gets a description for the sorting method by method name</p>","parent_name":"SortCoordinator"},"Classes/SortCoordinator.html#/s:13SortSpectacle0A11CoordinatorC9getMethod3forAA0aE0_pSgSS_tF":{"name":"getMethod(for:)","abstract":"<p>Gets the sorting method by the method&rsquo;s name.</p>","parent_name":"SortCoordinator"},"Classes/SortCoordinator.html#/s:13SortSpectacle0A11CoordinatorC7executeyyF":{"name":"execute()","abstract":"<p>Executes the different sorting methods, using a repeating timer within a closure.</p>","parent_name":"SortCoordinator"},"Classes/SortCoordinator.html#/s:13SortSpectacle0A11CoordinatorC11isExecutingSbyF":{"name":"isExecuting()","abstract":"<p>Is the coordinator executing or not</p>","parent_name":"SortCoordinator"},"Classes/SortCoordinator.html#/s:13SortSpectacle0A11CoordinatorC4stopyyF":{"name":"stop()","abstract":"<p>Stops the execution of the sorthing phase, advances to the next phase, if any.</p>","parent_name":"SortCoordinator"},"Classes/SortCoordinator.html#/s:13SortSpectacle0A11CoordinatorC8nextStep33_E39DA657DF99F8E3B5FB3314F3E5F9BALLSbyF":{"name":"nextStep()","abstract":"<p>Executes the next step of any sorting method when animating the methods.</p>","parent_name":"SortCoordinator"},"Classes/SortCoordinator.html":{"name":"SortCoordinator","abstract":"<p>SortCoordinator coordinates, as the name implies, sorting of arrays using different sorting methods."},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Global%20Variables.html":{"name":"Global Variables","abstract":"<p>The following global variables are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"}}